SNAPSHOT v0.9.7 — Castra (VM orchestration harness)

Edits since v0.9.6
- Thread 2 (Cooperative shutdown): clarify surfacing of effective cooperative/TERM/KILL timeouts in CLI help and JSON. Examples to include 0ms Unavailable and ChannelError with remediation. TTY remains non-blocking.
- Thread 12 (Bootstrap): commit to terminal BootstrapSummary in JSON (policy, effective inputs, per-step durations, outcome, durable log path). --plan emits same shape (outcome=Planned, zero durations) and fails non-zero on invalid config. In-flight event schema unchanged.
- Thread 13 (Ephemeral storage): add bounded, opportunistic orphan reclamation on next status/clean/up without blocking healthy operations; CLEAN attributes reclaimed bytes to ephemeral layers; TTY ephemerality reminder is concise and non-duplicated.
- Housekeeping: canonical TODOs updated; duplicate/legacy TODO stubs slated for removal; acceptance expanded for JSON/TTY specifics.

Active threads (intent + acceptance deltas)
- Thread 2 — Cooperative shutdown lifecycle (sequencing shipped; surfacing/config next):
  Expose effective cooperative/TERM/KILL timeouts via CLI/config and render in JSON. Include examples covering success, Unavailable(0ms), and ChannelError with remediation hints. TTY must not block other VMs; per-VM isolation retained.
  Anchors: src/core/options.rs; src/core/runtime.rs; src/core/events.rs; src/core/reporter.rs; src/app/down.rs; docs/.

- Thread 12 — Post-boot bootstrap pipeline (stamp-free; UX/plan in progress):
  TTY shows compact per-VM progress and a single-line completion (Success|NoOp|Failed|Skipped, total ms, durable log path). JSON stream concludes with BootstrapSummary carrying resolved policy (auto|always|skip), effective inputs (ssh host/port/user, remote_dir), per-step durations, outcome, and durable log path. --plan outputs the same summary shape with outcome=Planned and zero durations; non-zero exit on invalid config. JSON schema for in-flight events remains stable.
  Anchors: src/config.rs; src/core/bootstrap.rs; src/core/status.rs; src/core/reporter.rs; src/app/up.rs; src/cli.rs; docs/BOOTSTRAP.md.

- Thread 13 — Stateless runs (ephemeral-only write layer + cleanup):
  Implement bounded, opportunistic orphan reclamation of ephemeral layers/temp dirs on the next command after crashes/reboots, without blocking healthy operations. CLEAN explicitly attributes reclaimed bytes to ephemeral layers. Up/Down TTY includes a brief reminder that guest changes are ephemeral with a pointer to docs for exporting via SSH. Validation continues to reject any persistence knobs with actionable guidance.
  Anchors: src/core/operations/up.rs; src/app/up.rs; src/core/operations/clean.rs; src/app/clean.rs; src/core/runtime.rs; src/app/down.rs; docs/BOOTSTRAP.md; CLEAN.md; CLI help.

Current code state (observable surfaces)
- CLI/library split; status and ports remain responsive/non-blocking; clean shows byte accounting and links managed-image evidence when available.
- Managed images emit structured verification/profile events; app/up.rs renders steps; automation consumes JSON.
- Down emits cooperative shutdown events prior to escalation with per-VM durations; forced shutdown returns success with warning.
- Bootstrap is stamp-free; driven by config and optional per-VM metadata; SSH defaults hardened; durable per-VM logs; NoOp via sentinel; reruns policy-driven.
- Stateless policy captured; cleanup/orphan reclamation and UX notices are in-flight per Thread 13.

Narrative themes
1) Robust VM lifecycle — predictable, observable, bounded shutdown with clear outcomes and surfaced configuration.
10) Trustworthy bootstrap — automation-friendly events and summaries; idempotence via runner logic; stamp-free reruns.
12) Day-1 productivity — human-friendly TTY progress and concise summaries; dry-run confidence via --plan with deterministic summaries.
13) Ephemeral-only by policy — guests are disposable; host artifacts are logs/events; reclaimed bytes are visible and attributed.

Direction of travel
- Thread 2: wire timeout options through CLI/config → runtime; emit effective values; document with examples; maintain non-blocking TTY.
- Thread 12: implement BootstrapSummary in JSON and single-line TTY completion; deliver --plan output with non-zero exit on invalid config; keep schemas stable; update docs/help.
- Thread 13: add orphan reclamation pass and CLEAN attribution; add TTY ephemerality reminder and validation messaging.

Cross-links
- CLEAN integrates ephemeral layer reclamation (Thread 13) alongside managed-image evidence.
- Canonical TODOs: cooperative_shutdown_lifecycle, post_boot_bootstrap_pipeline, ephemeral_vm_storage_and_cleanup.

Editorial housekeeping
- Canonical TODO files updated to reflect refinements; duplicate stale TODO stubs identified for removal.
