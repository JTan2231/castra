SNAPSHOT v0.7.4 — Castra (VM orchestration harness)

Edits since last snapshot
- Delivered parts of Thread 1 (Skip discovery): CLI now enforces that `--skip-discovery` requires `--config` (or `--state-root` for future clean); help text updated. Tests and uniform coverage across subcommands still pending.
- Delivered core of Thread 3 (Broker freshness): `status --json` exposes `reachable: bool` and `last_handshake_age_ms`; legend/copy added. Need to codify non-blocking guarantees and log/event lines for handshake.
- Delivered major pieces of Thread 10 (Managed images): Alpine boot profile wired (kernel/initrd); source checksums/size verification added; clearer offline/mismatch diagnostics; emits copy for verified checksums and applied profile. Ensure machine-parseable Events and docs follow-up.

Active threads (intent + acceptance)
- Thread 1 — Discovery semantics gap [partially delivered]: `--skip-discovery` requires explicit config/path; zero filesystem walking when set; consistent copy and exit codes; tests across commands. Anchors: src/app/common.rs; src/core/options.rs; src/cli.rs.
- Thread 2 — Lifecycle gap: add multi-phase graceful shutdown before TERM→KILL with ordered Events and configurable timeouts; CLI copy references attempt but runtime behavior not yet implemented. Anchors: src/core/runtime.rs; src/core/events.rs; src/core/options.rs; src/app/down.rs.
- Thread 3 — Broker reachability [core fields delivered]: expose non-blocking freshness via reachable and last_handshake_age_ms; cap any initial probe; add deterministic handshake logs/events; document field semantics for automation. Anchors: src/core/status.rs; src/core/broker.rs; src/app/status.rs; src/core/logs.rs.
- Thread 6 — Ports active mode: add `--active` view; keep columns stable; target <200ms; degrade gracefully if inspection unavailable. Anchors: src/core/ports.rs; src/app/ports.rs; src/core/runtime.rs.
- Thread 10 — Managed images [profile+checksums delivered]: emit machine-parseable verification/profile events; document cache layout and remediation; align with CLEAN reclaimed-bytes accounting. Anchors: src/managed/mod.rs; src/core/logs.rs/reporter.rs; docs.
- Thread 11 — Library API for embedders: feature gating in place; add AGENTS.md guidance/snippet for using castra as a library with default-features=false. Anchors: src/lib.rs; Cargo.toml; docs/AGENTS.md.
- Thread 12 — Post-boot bootstrap pipeline: host bootstrap daemon reacts to fresh handshake and applies Nix flake over SSH; idempotent via hash stamps; observable logs under state root. Depends on Threads 3 and 10. Anchors: docs/BOOTSTRAP.md; workflows.init hooks; broker/status fields.
- Thread 13 — Castra Bus: extend broker to framed sessions for publish/subscribe; preserve handshake-only mode via capabilities; add host CLI to publish/tail; log persistence and freshness. Depends on Thread 3. Anchors: src/core/broker.rs; src/core/status.rs; src/core/events.rs; src/core/logs.rs; src/cli.rs.
- Thread 14 — First-class clean: implement `castra clean` with global/workspace scopes, dry-run/force, overlay opt-in; safe around running processes; emit CleanupProgress events and reclaimed bytes. Aligns with Threads 1, 2, 10. Anchors: src/cli.rs; src/app/clean.rs; src/core/options.rs; src/core/operations/clean.rs; src/core/project.rs; src/core/runtime.rs.

Current code state (observable surfaces)
- Versioning/MSRV: build.rs injects version/short SHA; CLI reports it. README declares MSRV=1.77; docs/RELEASING.md present.
- Feature gating: default features include `cli`; building with --no-default-features succeeds and excludes CLI. AGENTS.md guidance still missing.
- Skip discovery: CLI enforces explicit-config under `--skip-discovery`; help text updated. Tests for no-walk and exit codes outstanding.
- Broker status: `reachable` and `last_handshake_age_ms` exposed; legend describes freshness. Non-blocking and handshake log/event lines not yet guaranteed by tests.
- Managed images: Alpine boot profile delivered; checksum/size verification and improved diagnostics in place; emits copy for verification/profile. Machine-parseable Events and docs pending.
- Gaps outstanding: ports --active view; graceful shutdown behavior/events; `castra clean` command; bus not implemented; bootstrap flow remains documented-only.

Narrative themes
1) UX-first CLI contract → explicit-config with skip-discovery; consistent, actionable errors; tests back the promise.
2) Robust VM lifecycle → cooperative shutdown phases with events/timeouts; copy must match behavior.
3) Clear connectivity signals → stable, non-blocking status fields; recognizable handshake logs/events.
6) Networking clarity → ports --active with stable columns and fast path.
10) Trustworthy bootstrap → verified managed images and applied boot profile events enabling post-boot provisioning.
11) Embedder clarity → document how to consume castra as a library without CLI.
12) Day-1 productivity → documented, repeatable post-boot environment application keyed to handshakes.
13) Host-centric messaging → broker-based bus for guest↔host eventing without extra network plumbing.
14) Safe housekeeping → first-class clean to recover space and resolve cache corruption.

Direction of travel
- Finish Thread 1 with tests and uniform enforcement across commands (and future `clean`).
- Implement graceful shutdown events/behavior (Thread 2).
- Solidify Thread 3 non-blocking guarantees and add handshake Events/logs; document JSON fields for automation.
- Expose ports --active and wire runtime inspection (Thread 6).
- Emit structured Events for managed image verification/profile and document cache (Thread 10); cross-link to `clean`.
- Author AGENTS.md embedder guide (Thread 11).
- Deliver `castra clean` end-to-end per CLEAN.md (Thread 14).
- Keep bootstrap as documented scripts first; consider a first-class command after Threads 3/10 settle (Thread 12).
- Design and stage broker bus behind a capability flag without regressing handshake (Thread 13).

Cross-links
- BOOTSTRAP.md consumes Thread 3/10 fields and events; CLEAN.md enforces Thread 1/2/10; BUS.md extends Thread 3 semantics.
