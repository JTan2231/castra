SNAPSHOT v0.8.2 — Castra (VM orchestration harness)

Edits since v0.8.1
- Canonicalized active TODOs: re-homed lifecycle, managed-image, and bootstrap threads into single canonical TODOs; removed duplicates.
- Clarified stable event names/ordering across lifecycle (Thread 2), managed-image events (Thread 10), and bootstrap pipeline (Thread 12).
- Reaffirmed product-level acceptance and non-prescriptive anchors; mechanisms remain open while surfaces/events are fixed.

Active threads (intent + acceptance)
- Thread 2 — Cooperative shutdown lifecycle (not yet implemented): Before host termination, attempt guest‑cooperative shutdown with ordered, observable events and bounded waits.
  Acceptance (per VM):
  - Event order: ShutdownRequested → CooperativeAttempted(method: ACPI|QMP|Agent) → CooperativeSucceeded | CooperativeTimedOut → Escalation(SIGTERM)? → Escalation(SIGKILL)? → ShutdownComplete(outcome: Graceful|Forced).
  - Timeouts configurable via CLI/opts; status/UI remain responsive; per‑VM isolation maintained; idempotent behavior; stable JSON fields in logs/output.
  Anchors: src/core/runtime.rs; src/core/events.rs; src/core/options.rs; src/core/reporter.rs; src/app/down.rs.

- Thread 10 — Managed images: structured verification/profile events (partially shipped; events missing): Emit machine‑parseable events during verification/profile so downstream tools can rely on them.
  Acceptance:
  - Emit: ManagedImageVerificationStarted/ManagedImageVerificationResult and ManagedImageProfileApplied/ManagedImageProfileResult with stable fields (checksums, sizes, durations, outcomes, error?).
  - Reporter emits via the same unified channel used by lifecycle events; events are durable and appear in per‑VM or image‑scoped logs.
  - CLEAN links reclaimed‑bytes evidence to specific ManagedImageVerificationResult entries (by image id/path + timestamp) when available.
  Anchors: src/managed/mod.rs; src/core/logs.rs; src/core/reporter.rs; src/core/operations/clean.rs.

- Thread 12 — Post‑boot bootstrap pipeline (not yet implemented): After first successful broker handshake for a VM, apply a host‑provided bootstrap (e.g., Nix flake) over SSH idempotently.
  Acceptance:
  - Triggered exactly once per VM per image/content hash change (idempotence stamps include base image hash + bootstrap artifact hash under state root).
  - Events: BootstrapStarted / BootstrapCompleted(status: Success|NoOp) / BootstrapFailed emitted via reporter; durable step logs (connect, transfer, apply, verify) with durations.
  - Config knobs to disable or force ("always") bootstrap per‑VM or globally; safe defaults; responsive status during long runs.
  - Safe re‑runs: when inputs unchanged, emits NoOp without side effects.
  Anchors: docs/BOOTSTRAP.md; src/core/status.rs (handshake fields); state‑root conventions.

Current code state (observable surfaces)
- CLI/library split via feature gating; default includes CLI; library builds with no‑default‑features.
- Status exposes broker reachability (reachable, last_handshake_age_ms) and bus health; designed to remain non‑blocking.
- Ports view with stable columns; Clean command with byte accounting/safeguards; Managed images support profile+checksum verification.
- These shipped surfaces are stable; remaining work focuses on lifecycle events, image events, and post‑boot automation.

Narrative themes
1) Robust VM lifecycle — predictable, observable cooperative shutdown with bounded waits and clear outcomes.
10) Trustworthy bootstrap — verified managed images with structured events powering automation and cleanup.
12) Day‑1 productivity — idempotent, host‑driven post‑boot configuration triggered by real connectivity signals.

Direction of travel
- Implement cooperative shutdown events/behavior (Thread 2) honoring lifecycle waits and emitting ordered events.
- Add structured managed‑image verification/profile events and wire them into reporting/clean (Thread 10).
- Build the post‑boot bootstrap pipeline keyed to handshake and guarded by idempotence stamps (Thread 12).

Cross‑links
- BOOTSTRAP.md defines inputs/outputs for Thread 12 and references managed‑image events (Thread 10).
- CLEAN integrates with managed‑image events to present reclaimed‑bytes evidence.
- Lifecycle canonical TODO: cooperative_shutdown_lifecycle.md.
